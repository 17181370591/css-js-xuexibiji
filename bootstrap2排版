text-left/center/right/justify

有人说text-justify去掉了
<!DOCTYPE HTML>
<html>
<head>
<meta charset="utf-8">
<title>文本对齐风格</title>
<link rel="stylesheet" href="https://cdn.bootcss.com/bootstrap/4.0.0-beta.2/css/bootstrap.min.css">
<script src="https://cdn.bootcss.com/jquery/3.3.1/jquery.js"></script>
</head>
<body>
<script>
    var r='暂停服务天数皆为90天。违规行为累计分数在每年的十二月三十一日二十四时清零，但正在执行的违规处理不会随着累计分数清零而撤销。<hr>';
    
    $('body').append($('<div>').addClass('text-left').html('text-left'+r));
    $('body').append($('<div>').addClass('text-right').html('text-right'+r));
    $('body').append($('<div>').addClass('text-center').html('text-center'+r));
    $('body').append($('<div>').addClass('text-justify').html('text-justify'+r));   
    
</script>
</body>
</html>  

==========================================

列表：
通过给无序列表添加一个类名“.list-unstyled”,这样就可以去除默认的列表样式的风格。
通过添加类名“.list-inline”来实现内联列表，简单点说就是把垂直列表换成水平列表，而且去掉项目符号（编号），保持水平显示，
也可以说内联列表就是为制作水平导航而生。

表格（table）：
   .table：基础表格
   .table-striped：斑马线表格
   .table-bordered：带边框的表格
   .table-hover：鼠标悬停高亮的表格
   .table-condensed：紧凑型表格
   .table-responsive：响应式表格。响应式表格外面要加一层div，并且table-responsive的类是加在div上
   
内联表单：在Bootstrap框架中实现这样的表单效果是轻而易举的，你只需要在<form>元素中添加类名“form-inline”即可。  
role="form"是form必须的属性，class="form-group"是把盒子里的标签与外边部分间隔空间，class="form-control"是内部标签的基本样式
    <form class="form-inline" role="form">
      <div class="form-group">
        <label class="sr-onl1y" for="exampleInputEmail2">邮箱</label>
        <input type="email" class="form-control" id="exampleInputEmail2" placeholder="请输入你的邮箱地址">
      </div>
      <div class="form-group">
        <label class="sr-only" for="exampleInputPassword2">密码</label>
        <input type="password" class="form-control" id="exampleInputPassword2" placeholder="请输入你的邮箱密码">
      </div>
    </form>  

表单控件(下拉选择框select)。带multiple属性的是多选框

    <form role="form">
    <div class="form-group">
      <select class="form-control">
        <option>1</option>
        <option>2</option>
        <option>3</option>
      </select>
      </div>
      <div class="form-group">
      <select multiple class="form-control">
        <option>3</option>
        <option>4</option>
        <option>5</option>
      </select>
    </div>
    </form>
    
表单控件(复选框checkbox和单选择按钮radio)
1、不管是checkbox还是radio都使用label包起来了
2、checkbox连同label标签放置在一个名为“.checkbox”的容器内
3、radio连同label标签放置在一个名为“.radio”的容器内
在Bootstrap框架中，主要借助“.checkbox”和“.radio”样式，来处理复选框、单选按钮与标签的对齐方式。
1.radio是按组来区分选择框的，“name”其实是组名，只有选择框的“name”相同才表明同组；
2.“value”代表的是这个选择框的值，是提交服务器用的，因为服务器要识别选择框的值，所以“value”的值必须不同这样才能区分不同选择框；
3.选择框文本直接在<input>标签后写上就行。总结一句就是"name"必须相同，"value"必须不同，文本在标签之后。

    <form role="form">
      <h3>案例1</h3>
      <div class="checkbox">
        <label><input type="checkbox" value="">记住密码</label>
      </div>
      <div class="radio">
        <label><input type="radio" name="optionsRadios" id="optionsRadios1" value="love" checked>喜欢</label>
      </div>
        <div class="radio">
        <label><input type="radio" name="optionsRadios" id="optionsRadios2" value="hate">不喜欢</label>
      </div>
    </form>  

表单控件(复选框和单选按钮水平排列)
1、如果checkbox需要水平排列，只需要在label标签上添加类名“checkbox-inline”
2、如果radio需要水平排列，只需要在label标签上添加类名“radio-inline”

    <form role="form">
      <div class='form-group'>
        <label class='checkbox-inline'><input type='checkbox'>1</label>
        <label class='checkbox-inline'><input type='checkbox'>1</label>
      </div> 
   </form>
   
表单控件大小
input-lg和input-sm设置高度，col-xs-X的X表示宽度占其父元素的12分之X

    <form role="form" class="form-horizontal">
      <div class="form-group">
        <div class="col-xs-4">
          <input class="form-control input-lg" type="text" placeholder=".col-xs-4">

        </div>
        <div class="col-xs-4">
          <input class="form-control input-lg" type="text" placeholder=".col-xs-4">
        </div>
        <div class="col-xs-4">
          <input class="form-control input-lg" type="text" placeholder=".col-xs-4">
        </div>
      </div>
      <div class="form-group">
        <div class="col-xs-6"><input class="form-control" type="text" placeholder=".col-xs-6"></div>
        <div class="col-xs-6"><input class="form-control" type="text" placeholder=".col-xs-6"></div>

      </div>  
      <div class="form-group">
        <div class="col-xs-5">
          <input class="form-control input-sm" type="text" placeholder=".col-xs-5">
        </div>
        <div class="col-xs-7">
          <input class="form-control input-sm" type="text" placeholder=".col-xs-7">
        </div>
      </div> 
    </form>

表单控件状态(禁用状态)
标签设置disabled会被禁用
在Bootstrap框架中，如果fieldset设置了disabled属性，整个域（<fieldset disabled>到</fieldset>之间的部分）
都将处于被禁用状态。
在 Bootstrpa 框架中，如果 fieldset 设置了disabled 属性，整个域都将处于被禁用状态，
但是 如果 fieldset 后面紧跟着的是legend标签，那么legend 内部的 input在表面看是 颜色变成灰色的了，
但是 并没有被禁用，还是可以进行输入的。注意 只有 fieldset后面第一个就是 legend(而不是其他的标签，比如 label) 的时候，
才会出现 变灰但不禁用 的情况，而且只有第一个 legend 是 灰色不禁用 的状态，后面的legend 照样是 灰色禁用  的。

<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
	<title>表单控件状态——禁用状态</title>
	<link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css">
</head>
<body>
<h3>示例1</h3>
<form role="form" class="form-horizontal">
  <div class="form-group" disabled>
    <div class="col-xs-6" >
      <input class="form-control input-lg" type="text" placeholder="不是焦点状态下效果">
    </div>
    <div class="col-xs-6">
      <input class="form-control input-lg" id="disabledInput" type="text" placeholder="表单已被禁用，不可输入" >
    </div>
  </div> 
</form> 
<br>
<br>
<br> 
<h3>示例2</h3>   
<form role="form">
  <fieldset disabled>
    <div class="form-group">
      <label for="disabledTextInput">禁用的输入框</label>
      <input type="text" id="disabledTextInput" class="form-control" placeholder="禁止输入">
    </div>
    <div class="form-group">
      <label for="disabledSelect">禁用的下拉框</label>
      <select id="disabledSelect" class="form-control">
        <option>不可选择</option>
      </select>
    </div>
    <div class="checkbox">
      <label>
        <input type="checkbox"> 无法选择
      </label>
    </div>
    <button type="submit" class="btn btn-primary">提交</button>
  </fieldset>
</form> 
<br>
<br>
<br>
<h3>示例3</h3>
<form role="form">
  <fieldset disabled>
    <legend><input type="text" class="form-control" placeholder="显然我颜色变灰了，但是我没被禁用，不信？单击试一下" /></legend>
    <div class="form-group">
      <label for="disabledTextInput">禁用的输入框</label>
      <legend><input type="text" id="disabledTextInput" class="form-control" placeholder="禁止输入"></legend>
    </div>
    <div class="form-group">
      <label for="disabledSelect">禁用的下拉框</label>
      <select id="disabledSelect" class="form-control">
        <option>不可选择</option>
      </select>
    </div>
    <div class="checkbox">
      <label>
        <input type="checkbox"> 无法选择
      </label>
    </div>
    <button type="submit" class="btn btn-primary">提交</button>
  </fieldset>
</form>  
</body>
</html>

表单控件状态(验证状态)
在制作表单时，不免要做表单验证。同样也需要提供验证状态样式，在Bootstrap框架中同样提供这几种效果。
1、.has-warning:警告状态（黄色）
2、.has-error：错误状态（红色）
3、.has-success：成功状态（绿色）
使用的时候只需要在form-group容器上对应添加状态类名。

<form role="form">
  <div class="has-success">
    <label class="control-label" for="">成功状态</label>
    <input type="text" class="form-control" id="inputSuccess1" placeholder="成功状态" >
  </div>
  <div class="form-group has-warning">
    <label class="control-label" for="inputWarning1">警告状态</label>
    <input type="text" class="form-control" id="inputWarning1" placeholder="警告状态">
  </div>
  <div class="form-group has-error">
    <label class="control-label" for="inputError1">错误状态</label>
    <input type="text" class="form-control" id="inputError1" placeholder="错误状态">
  </div>
</form>  

块状按钮
Bootstrap框架中提供了一个类名“btn-block”。按钮使用这个类名就可以让按钮充满整个容器，
并且这个按钮不会有任何的padding和margin值。在实际当中，常把这种按钮称为块状按钮。

<body>
    <button class="btn btn-primary btn-lg btn-block" type="button">大型按钮.btn-lg</button>   
    <button class="btn btn-primary col-xs-9" type="button">正常按钮</button>
    <button class="btn btn-primary btn-sm" type="button">小型按钮.btn-sm</button>
    <button class="btn btn-primary btn-xs" type="button">超小型按钮.btn-xs</button>   
</body>

按钮状态——禁用状态

	<button class="btn btn-primary btn-lg btn-block" type="button" disabled="disabled">通过disabled属性禁用按钮</button> 
	<button class="btn btn-primary btn-block disabled" type="button">通过添加类名disabled禁用按钮</button>
	<button class="btn btn-primary btn-sm btn-block" type="button">未禁用的按钮</button>
	<a href="https://www.baidu.com/" class="btn btn-danger disabled">我被禁用了</a>
	
	
图像在网页制作中也是常要用到的元素，在Bootstrap框架中对于图像的样式风格提供以下几种风格：
1、img-responsive：响应式图片，主要针对于响应式设计
2、img-rounded：圆角图片
3、img-circle：圆形图片
4、img-thumbnail：缩略图片

	<div class="container">
	  <div class="row">
	    <div class="col-sm-4">
	      <img   alt="111111111111111110" src="http://placehold.it/140x140">
		<div>默认图片</div>
	    </div>
	    <div class="col-sm-4">
	      <img  class="img-rounded" alt="140x140" src="http://placehold.it/140x140"> 
		<div>圆角图片</div>
	    </div>
	    <div class="col-sm-4">
	      <img  class="img-circle" alt="140x140" src="http://placehold.it/140x140">
		<div>圆形图片</div>
	    </div>
	      <div class="row">
		<div class="col-sm-6">
		  <img  class="img-thumbnail" alt="140x140" src="http://placehold.it/140x140"> 
		    <div>缩略图</div>
		</div>
		<div class="col-sm-6">
		  <img  class="img-responsive" alt="140x140" src="http://placehold.it/140x140" /> 
		  <div>响应式图片</div>
		</div>
	      </div>
	  </div> 
	</div> 

点击data-toggle="dropdown"按钮时这个盒子会toggle "sow"属性，
show dropdown-menu会display:block。dropdown-menu里是菜单内容，需要设置块级元素成，ul/li的格式比较好
dropdown-menu-right使下列菜单右对齐

<!DOCTYPE HTML>
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<title>菜单项状态</title>
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css">
  <script src="https://www.imooc.com/static/lib/jquery/1.9.1/jquery.js"></script>
  <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script> 
</head>
<body>
<div class="btn-group">
  <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown">
    下拉菜单
  </button>
  <ul class="dropdown-menu dropdown-menu-right">
    <li class="active"><a  href="#">下拉菜单项</a></li>
    <li><a href="#">下拉菜单项</a></li>
    <li><a href="#">下拉菜单项</a></li>
    <li class="divider"></li>
    <li class="disabled"><a href="#">下拉菜单项</a></li>
  </ul>
</div> 
</body>
</html>
