https://www.jianshu.com/p/549aaa5fabaa

.main左浮动占据100%，必须设置做浮动，因为两个连续左浮动的元素，后一个会贴在前一个的右边（如果宽度足够）
.left本来在.main下方左侧（因为.main右侧没有屏幕内空间），设置margin-left: -100%后会跑到屏幕外跑到.main右侧紧贴，然后-100%到屏幕内左侧
.right本来在.main下方左侧（因为.main右侧没有屏幕内空间），设置margin-left: -20%后会跑到屏幕外跑到.main右侧紧贴，然后-20%到屏幕内右侧

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="https://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>
    <style>
*{
        margin:0;
        padding: 0
    }
    .main{
        float: left;
        width: 100%;

    }
    .main .main-content{
        margin: 0 20%;
        background-color: rgba(33, 114, 214, 0.8);
        height: 500px
    }
    .left{
        width: 20%;
        float: left;
        background-color: rgba(255, 82, 0, 0.8);
        margin-left: -100%;
        height: 200px

    }
    .right{
        width: 20%;
        height: 200px;
        margin-left: -20%;
        float: left;
        background-color: rgba(90, 243, 151, 0.8);
    }


      </style>
</head>
<body><div class="main">
            <div class="main-content">main content</div>
</div>
<div class="left">left</div>
<div class="right">right</div>

</body>
</html>

============================================================================================================================

对于自身的影响

当元素不存在width属性或者（width：auto）的时候，负margin会增加元素的宽度，看下下面的例子

bootstrap里，   .contain在宽屏width是1170px，  padding是0 15px，
.row也是1170px， 因为设置了margin：0 15px， 去掉一侧负margin宽度会-15px

<div class="container">
  <div class="box1">
         I dont have the width
    </div>
</div>
.container{
        margin:0 auto;
        width: 500px;
        border: 1px #ccc solid;
        margin-bottom: 20px;
}
.box1{
    margin-left: -20px;
}

============================================================================================================================
去除列表右边框

利用负margin增加宽度的特点，举个在实际中应用例子

对于图片列表，我会常常设计成两边对齐，中间元素平均分布

想让每一排最后一个对齐父元素的右边框，一般都两种处理，第一种会在给个循环体内的最后一个添加一个float:right属性或者做特殊处理，
但这样还需要后端配合，我们自己能解决的就尽量自己解决。还有就是用css3的flexbox布局能解决这个两边对齐，但是这种布局兼容性不好，
你的用户用IE的话，不推荐！so，负margin就能发挥其增加元素宽度的特点，完美的解决这个问题！


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="https://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>
    <style>
    *{
        margin:0;
        padding: 0
    }
    .main{
        box-sizing: border-box;
        width: 1200px;
        margin:0 auto;
        min-height:300px;
        border:1px solid #f00;
    }
    .main:after{
        content:'';display: block;clear: both;
    }
    ul{margin-right:-1%;height:20px;   border:1px solid #f0f;
        /*box-sizing: border-box;*/
        /*width:100%;*/
    }
        li{width:19%;height:200px;border:1px solid #ff0;margin:0 1% 1% 0;float:left;list-style: none;
            box-sizing: border-box;
        }


      </style>
</head>
<body><div class="main">
    <ul>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
    </ul>

</div>
</body>
</html>



============================================================================================================================
多列等高

利用margin-bottom为负值会减少css读取元素高度的特性，加上padding-bottom和overflow:hidden,就能做一个未知高度的多列等高布局（当然也可以用table）


虽然设置了5000的内边距，但是我用－5000的外边距去抵消掉，所以对于父元素来说（上文所说的css能读取的高度），
他还是原来的高度（但其自身实际高度为5000p x+本来高度），然后父元素在加上overflow:hidden;以最高的高度进行裁切，所以就有了看起来“等高”的3个div。


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="https://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>
    <style>
        .container {
            width: 100%;
            overflow: hidden;
        }

        .left {
            /*min-height: 50px;*/
            width: 33.33%;
            margin-bottom: -5000px;
            padding-bottom: 5000px;
            float: left;
            background-color: rgba(33, 114, 214, 0.8);
        }

        .main {
            /*min-height:100px;*/
            margin-bottom: -5000px;
            width: 33.33%;
            float: left;
            padding-bottom: 5000px;
            background-color: rgba(255, 82, 0, 0.8);
        }

        .right {
            width: 33.33%;
            float: left;
            margin-bottom: -5000px;
            padding-bottom: 5000px;
            background-color: rgba(90, 243, 151, 0.8)
        }
    </style>
</head>
<body>
<div class="container">
    <div class="left">
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
    </div>
    <div class="main">height:100px</div>
    <div class="right">height:30px</div>
</div>

</body>
</html>


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <script type="text/javascript" src="https://libs.baidu.com/jquery/1.9.1/jquery.min.js"></script>
    <style>
        .container {
            width: 100%;
            overflow: hidden;
        }

        .left {
            /*min-height: 50px;*/
            width: 33.33%;
            margin-bottom: -5000px;
            padding-bottom: 5000px;
            float: left;
            background-color: rgba(33, 114, 214, 0.8);
            /*border:11px solid #f00;box-sizing: border-box;*/
        }

        .main {
            /*min-height:100px;*/
            margin-bottom: -5000px;
            width: 33.33%;
            float: left;
            padding-bottom: 5000px;
            background-color: rgba(255, 82, 0, 0.8);
        }

        .right {
            width: 33.33%;
            float: left;
            margin-bottom: -5000px;
            padding-bottom: 5000px;
            background-color: rgba(90, 243, 151, 0.8)
        }
    </style>
</head>
<body>
<div class="container">
    <div class="left">
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
        height:50px
        <hr>
    </div>
    <div class="main">height:100px</div>
    <div class="right">height:30px</div>

</div>


</body>
</html>






