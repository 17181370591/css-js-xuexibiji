cc.queue("myAnimation",FUNC)表示在cc（元素）上绑定func（函数或者数组）到data myAnimation（文本）
cc.dequeue("myAnimation")表示运行绑定在cc的data myAnimation上的函数数组，先进先出

var cc=$('.cc').eq(0);
var FUNC=[
    function() {$(this).animate({'width':"+=100"},aniCB);},
    function() {$(this).animate({'margin-left':"+=100"},aniCB);},
    function() {$(this).animate({'width':"+=100"},aniCB);},
    function() {$(this).animate({'margin-left':"+=100"},aniCB);},
    function() {$(this).animate({'width':"+=100"},aniCB);},
    function(){alert("动画结束")}
];
var aniCB=function() {
    cc.dequeue("myAnimation");
}
cc.queue("myAnimation",FUNC);
aniCB();

=====================================================================================================
startAnimation()开始后，四个函数被加入queue，自动dequeue完后会继续调用dequeue
似乎这种情况下手动调用dequeue（）后也会自动调用dequeue

<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<title>菜鸟教程(runoob.com)</title>
<script src="http://cdn.static.runoob.com/libs/jquery/1.10.2/jquery.min.js">
</script>
<script>
$(document).ready(function(){
	$("button").click(function(){
		var div = $("div");
		startAnimation();
		showQueue();
		function startAnimation(){
			div.animate({left:300},400);
			div.animate({top:300},400);
			div.animate({left:0},400);
			div.animate({top:0},400,startAnimation);
		}
		function showQueue(){
			var q=div.queue('fx');
			console.log(q.length);
		div.dequeue('fx');
			setTimeout(showQueue,600);
		}
	});
});
</script>
</head>
<body>

<button>开始动画</button>
<p>对列长度为: <span></span></p>
<div style="width:50px;height:50px;position:absolute;left:10px;top:100px;background-color:red;"></div>

</body>
</html>
